import { useState } from 'react'

export const VoiceAuth = ({ onAuthSuccess }) => {
  const [isListening, setIsListening] = useState(false)

  const startVoiceAuth = async () => {
    setIsListening(true)
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    setTimeout(() => {
      // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∞–Ω–∞–ª–∏–∑ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
      const isAuthenticated = Math.random() > 0.2 // 80% —É—Å–ø–µ—Ö–∞
      
      if (isAuthenticated) {
        onAuthSuccess()
        alert('‚úÖ –ì–æ–ª–æ—Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω! –î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω.')
      } else {
        alert('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ì–æ–ª–æ—Å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω.')
      }
      
      setIsListening(false)
    }, 3000)
  }

  return (
    <div className="fixed bottom-4 right-4 z-50">
      <button
        onClick={startVoiceAuth}
        disabled={isListening}
        className="bg-purple-600 hover:bg-purple-700 text-white p-3 rounded-full shadow-lg transition"
      >
        {isListening ? 'üé§ –ê–Ω–∞–ª–∏–∑...' : 'üé§ –¢–∏—Ö–∏–π –≤–µ—Ç–µ—Ä'}
      </button>
    </div>
  )
}